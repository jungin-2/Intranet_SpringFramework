<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.board.mappers.member">

<!-- 사용자 정보 등록 -->
<insert id="memberInfoRegistry" parameterType="com.board.dto.MemberVO">

insert into tbl_member (userid,username,password,telno,email,regdate,
	role,org_filename,stored_filename,filesize,zipcode,address,lastpwdate,pwcheck)  
	values (#{userid},#{username},#{password},#{telno},#{email},sysdate,'user',
	#{org_filename, jdbcType=VARCHAR},#{stored_filename, jdbcType=VARCHAR},#{filesize},#{zipcode},#{address},
	sysdate,1)

</insert>

<!-- ID 확인 -->
<select id="idCheck" parameterType="string" resultType="int">
	select count(*) from tbl_member where userid = #{userid}
</select>

<!-- 마지막 로그인 날짜 등록 -->	
<insert id="logindateUpdate" parameterType="string">
	insert into tbl_member_log (userid,inouttime,status) values (#{userid},sysdate,'IN')
</insert>

<!-- 로그인 시 필요한 정보 가져 오기-->
<select id="login" parameterType="string" resultType="com.board.dto.MemberVO">
    select userid, username, password, role from tbl_member where userid = #{userid}
</select>

<!-- welcome 페이지에서 볼 정보 가져 오기-->
<select id="welcomeView" parameterType="string" resultType="com.board.dto.MemberVO">
select (select to_char(max(inouttime),'YYYY-MM-DD HH24:MI:SS') from tbl_member_log where userid=#{userid} and status='IN') as lastlogindate,
    (select to_char(max(inouttime),'YYYY-MM-DD HH24:MI:SS') from tbl_member_log where userid=#{userid} and status='OUT') as lastlogoutdate,
    (select to_char(regdate,'YYYY-MM-DD HH24:MI:SS') from tbl_member where userid=#{userid}) as regdate from dual
</select>

<!-- 로그아웃 날짜 등록 -->
<insert id="logoutUpdate" parameterType="string">
	insert into tbl_member_log (userid,inouttime,status) values(#{userid},sysdate,'OUT')
</insert>

<!-- 사용자 정보 보기 -->
<select id="memberInfoView" parameterType="string" resultType="com.board.dto.MemberVO">
	select username,password,telno,email,role,stored_filename,zipcode,address,
	to_char(regdate,'YYYY-MM-DD HH24:MI:SS') as regdate from tbl_member where userid = #{userid}
</select>

<!-- 우편번호 행 최대 갯수 계산 -->
<select id="addrTotalCount" parameterType="string" resultType="int">
	select count(*) from tbl_addr where road like '%'||#{addSearch}||'%'
		or building like '%'||#{addrSearch}||'%'
</select>

<!-- 우편번호 검색 -->
<select id="addrSearch" parameterType="HashMap" resultType="com.board.dto.AddressVO">

	select zipcode, province, road, building, oldaddr from 
	(select zipcode, province, road, building, oldaddr, row_number() over(order by zipcode) as rnum  
	from tbl_addr where road like '%'||#{addrSearch}||'%' 
	or building like '%'||#{addrSearch}||'%') addr 
	where rnum between #{startPoint} and #{endPoint} order by zipcode

</select>

<!-- 비밀번호 변경 30일 체크 -->
<select id="pwdModifyCheck" parameterType="String" resultType="HashMap">
	
	
	select (to_date(to_char(sysdate,'YYYYMMDD'),'YYYYMMDD')-to_date(to_char(lastpwdate,'YYYYMMDD'),'YYYYMMDD')
	) as datedf, pwcheck from tbl_member where userid = #{userid}
	
</select>

<!-- 30일 후에 비밀번호 업데이트 -->
<update id="updatePwdAfter30" parameterType="String">
	UPDATE tbl_member SET pwcheck = (SELECT pwcheck FROM tbl_member WHERE userid= #{userid})+1  WHERE userid = #{userid}
</update>

<!-- 30일 동안 비번 변경 안한 유저 지금 변경 -->
<update id="pwdModifyNow" parameterType="HashMap">
	update tbl_member set password = #{password}, lastpwdate = sysdate, pwcheck=1 where userid=#{userid}
</update>

<!-- 사용자 정보 변경 -->
<update id="updateUserInfo" parameterType="HashMap">
	update tbl_member set username = #{username}, telno = #{telno}, email=#{email}, zipcode=#{zipcode},
	address=#{address}, org_filename=#{org_filename, jdbcType=VARCHAR}, stored_filename=#{stored_filename, jdbcType=VARCHAR}  where userid=#{userid}
</update>

<!-- 아이디 찾기 -->
<select id="searchID" parameterType="HashMap" resultType="String">
	select userid from tbl_member where username=#{username} and telno=#{telno}
</select>

<!-- 비밀번호 찾기 - 아이디,이름 일치 유저 확인 -->
<select id="isUser" parameterType="HashMap" resultType="int">
	select count(*) id_check from tbl_member where userid = #{userid} and username = #{username}
</select>

<!-- 유저 맞으면 임시비밀번호 발급 -->
<update id="saveTempPw" parameterType="HashMap">
	update tbl_member set password = #{password} where userid = #{userid}

</update>

<!-- 멤버 탈퇴 -->
<delete id="deleteMember" parameterType="String">
	delete from tbl_member where userid=#{userid}
</delete>

<select id="getFileName" parameterType="String" resultType="String">
	select stored_filename from tbl_member where userid=#{userid}
</select>

<!-- 탈퇴 시 삭제할 첨부 파일  -->
<select id="deleteAccountFile" parameterType="string" resultType="com.board.dto.FileVO">
	select stored_filename from tbl_file where userid=#{userid}
</select>
</mapper>